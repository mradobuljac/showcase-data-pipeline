AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  showcase-data-pipeline

  Sample SAM Template for showcase-data-pipeline

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60


Resources:

  # S3 bucket containing raw data files
  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: showcase-data-pipeline

  # API Endpoint serving product data
  GetChangedProductDataApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: MyGetChangedProductDataApi

  # Backend Lambda code for product API endpoint
  GetChangedProductDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_changed_product_data/
      Handler: get_changed_product_data.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        GetChangedProductDataApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref GetChangedProductDataApi
            Path: /products
            Method: get

  # Lambda extracts product data from API and uploads to S3 bucket
  ProductsToS3:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: showcase_data_pipeline_products_to_s3
      CodeUri: src/products_to_s3/
      Handler: products_to_s3.lambda_handler
      Runtime: python3.10
      Policies: # this bucket policy is all that's necessary to allow lambda func to write to a bucket. Too easy!
        - S3WritePolicy:
            BucketName: !Ref PipelineBucket
      Architectures:
        - x86_64
      Environment:
        Variables:
          ENDPOINT: !Sub "https://${GetChangedProductDataApi}.execute-api.${AWS::Region}.amazonaws.com/products"
          BUCKET: !Ref PipelineBucket

  # API Endpoint serving sales data
  GetGeneratedSalesDataApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: MyGetGeneratedSalesDataApi

  # Backend Lambda code for sales API endpoint
  GetGeneratedSalesDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_generated_sales_data/
      Handler: get_generated_sales_data.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        GetGeneratedSalesDataApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref GetGeneratedSalesDataApi
            Path: /sales
            Method: get

  # Lambda extracts sales data from API and uploads to S3 bucket
  SalesToS3:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: showcase_data_pipeline_sales_to_s3
      CodeUri: src/sales_to_s3/
      Handler: sales_to_s3.lambda_handler
      Runtime: python3.10
      Policies: # this bucket policy is all that's necessary to allow lambda func to write to a bucket. Too easy!
        - S3WritePolicy:
            BucketName: !Ref PipelineBucket
      Architectures:
        - x86_64
      Environment:
        Variables:
          ENDPOINT: !Sub "https://${GetGeneratedSalesDataApi}.execute-api.${AWS::Region}.amazonaws.com/sales"
          BUCKET: !Ref PipelineBucket

  # API Endpoint serving customers data
  GetChangedCustomersDataApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: MyGetGeneratedCustomersDataApi

  # Backend Lambda code for customers API endpoint
  GetChangedCustomersDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_changed_customer_data/
      Handler: get_changed_customer_data.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        GetChangedCustomersDataApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref GetChangedCustomersDataApi
            Path: /customers
            Method: get

Outputs:
  GetChangedProductDataApi:
    Description: "API Gateway endpoint URL for Prod stage for GetChangedProductData function"
    Value: !Sub "https://${GetChangedProductDataApi}.execute-api.${AWS::Region}.amazonaws.com/products"
  GetChangedCustomersDataApi:
    Description: "API Gateway endpoint URL for Prod stage for GetChangedCustomersData function"
    Value: !Sub "https://${GetChangedCustomersDataApi}.execute-api.${AWS::Region}.amazonaws.com/customers"
  GetGeneratedSalesDataApi:
    Description: "API Gateway endpoint URL for Prod stage for GetGeneratedSalesData function"
    Value: !Sub "https://${GetGeneratedSalesDataApi}.execute-api.${AWS::Region}.amazonaws.com/sales"